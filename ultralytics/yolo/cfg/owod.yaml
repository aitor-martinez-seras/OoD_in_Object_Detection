# Ultralytics YOLO üöÄ, AGPL-3.0 license
# COCO 2017 dataset http://cocodataset.org by Microsoft
# Example usage: yolo train data=coco.yaml
# parent
# ‚îú‚îÄ‚îÄ ultralytics
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ coco  ‚Üê downloads here (20.1 GB)


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
# In OWOD case, the dataset is referenced relative to the datasets folder, 
# to enable not making another copy of both COCO and Pascal VOC datasets
path: ../datasets  # dataset root dir
train: OWOD/train.txt  # train images (relative to 'path') 118287 images
val: OWOD/val.txt  # val images (relative to 'path') 5000 images
test: OWOD/test.txt  # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794

# Define the dataset class if needed, else by default is YOLODataset
dataset_class: FilteredYOLODataset
# Define the options wanted for the load of the dataset
remove_images_with_no_annotations: True  # remove images with no annotations

# Classes
names:
  0: airplane
  1: bicycle
  2: bird
  3: boat
  4: bottle
  5: bus
  6: car
  7: cat
  8: chair
  9: cow
  10: dining table
  11: dog
  12: horse
  13: motorcycle
  14: person
  15: potted plant
  16: sheep
  17: couch
  18: train
  19: tv
  20: truck
  21: traffic light
  22: fire hydrant
  23: stop sign
  24: parking meter
  25: bench
  26: elephant
  27: bear
  28: zebra
  29: giraffe
  30: backpack
  31: umbrella
  32: handbag
  33: tie
  34: suitcase
  35: microwave
  36: oven
  37: toaster
  38: sink
  39: refrigerator
  40: frisbee
  41: skis
  42: snowboard
  43: sports ball
  44: kite
  45: baseball bat
  46: baseball glove
  47: skateboard
  48: surfboard
  49: tennis racket
  50: banana
  51: apple
  52: sandwich
  53: orange
  54: broccoli
  55: carrot
  56: hot dog
  57: pizza
  58: donut
  59: cake
  60: bed
  61: toilet
  62: laptop
  63: mouse
  64: remote
  65: keyboard
  66: cell phone
  67: book
  68: clock
  69: vase
  70: scissors
  71: teddy bear
  72: hair drier
  73: toothbrush
  74: wine glass
  75: cup
  76: fork
  77: knife
  78: spoon
  79: bowl

coco_classes:
  0: person
  1: bicycle
  2: car
  3: motorcycle
  4: airplane
  5: bus
  6: train
  7: truck
  8: boat
  9: traffic light
  10: fire hydrant
  11: stop sign
  12: parking meter
  13: bench
  14: bird
  15: cat
  16: dog
  17: horse
  18: sheep
  19: cow
  20: elephant
  21: bear
  22: zebra
  23: giraffe
  24: backpack
  25: umbrella
  26: handbag
  27: tie
  28: suitcase
  29: frisbee
  30: skis
  31: snowboard
  32: sports ball
  33: kite
  34: baseball bat
  35: baseball glove
  36: skateboard
  37: surfboard
  38: tennis racket
  39: bottle
  40: wine glass
  41: cup
  42: fork
  43: knife
  44: spoon
  45: bowl
  46: banana
  47: apple
  48: sandwich
  49: orange
  50: broccoli
  51: carrot
  52: hot dog
  53: pizza
  54: donut
  55: cake
  56: chair
  57: couch
  58: potted plant
  59: bed
  60: dining table
  61: toilet
  62: tv
  63: laptop
  64: mouse
  65: remote
  66: keyboard
  67: cell phone
  68: microwave
  69: oven
  70: toaster
  71: sink
  72: refrigerator
  73: book
  74: clock
  75: vase
  76: scissors
  77: teddy bear
  78: hair drier
  79: toothbrush

# Class mapping from COCO to OWOD (Pascal + COCO, dividided is tasks)
coco_to_owod_mapping:  # coco: owod (pascal + coco)
  0: 14
  1: 1
  2: 6
  3: 13
  4: 0
  5: 5
  6: 18
  7: 20
  8: 3
  9: 21
  10: 22
  11: 23
  12: 24
  13: 25
  14: 2
  15: 7
  16: 11
  17: 12
  18: 16
  19: 9
  20: 26
  21: 27
  22: 28
  23: 29
  24: 30
  25: 31
  26: 32
  27: 33
  28: 34
  29: 40
  30: 41
  31: 42
  32: 43
  33: 44
  34: 45
  35: 46
  36: 47
  37: 48
  38: 49
  39: 4
  40: 74
  41: 75
  42: 76
  43: 77
  44: 78
  45: 79
  46: 50
  47: 51
  48: 52
  49: 53
  50: 54
  51: 55
  52: 56
  53: 57
  54: 58
  55: 59
  56: 8
  57: 17
  58: 15
  59: 60
  60: 10
  61: 61
  62: 19
  63: 62
  64: 63
  65: 64
  66: 65
  67: 66
  68: 35
  69: 36
  70: 37
  71: 38
  72: 39
  73: 67
  74: 68
  75: 69
  76: 70
  77: 71
  78: 72
  79: 73

# Download script/URL (optional)
download: |
  from ultralytics.utils.downloads import download
  from pathlib import Path

  # Download labels
  segments = True  # segment or box labels
  dir = Path(yaml['path'])  # dataset root dir
  url = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'
  urls = [url + ('coco2017labels-segments.zip' if segments else 'coco2017labels.zip')]  # labels
  download(urls, dir=dir.parent)
  # Download data
  urls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images
          'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images
          'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)
  download(urls, dir=dir / 'images', threads=3)
